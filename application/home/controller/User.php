<?php
namespace app\home\controller;

use app\admin\model\CashModel;
use app\admin\model\MessageModel;
use app\admin\model\RecordModel;
use app\admin\model\TaskModel;
use app\admin\model\TaskOrderModel;
use app\admin\model\TypeModel;
use app\admin\model\UserModel;
use app\common\util\QrcodeServer;
use think\Db;
use app\admin\model\StepModel;
use think\Session;

class User extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->login();
    }

    public function index()
    {
        $this->assign('title','我的');
        return $this->fetch();
    }
    public function invite(){
      	$count_user = UserModel::where('invite',$this->uid())->count();
        $this->assign('count_user',$count_user);
        $count_order = TaskOrderModel::where('invite',$this->uid())->count();
        $this->assign('count_order',$count_order);
        $count_sum = RecordModel::where(array('uid'=>$this->uid(),'type'=>4))->sum('money');
        $this->assign('count_sum',$count_sum);
        $users = UserModel::order('sum desc')->limit(20)->select();
        foreach ($users as $k=>$v){
          	$users[$k]['tel'] = substr_replace($v['tel'],'****',3,4);
            $users[$k]['count'] = UserModel::where('invite',$v['id'])->count();
            $users[$k]['reward'] = RecordModel::where(array('uid'=>$v['id'],'type'=>4))->sum('money');
        }
        $this->assign('users',$users);
        $this->assign('title','邀请好友');
        return $this->fetch();
    }
  	public function invites(){
        $users = UserModel::where('invite',$this->uid())->select();
        $this->assign('users',$users);
        $this->assign('title','好友列表');
        return $this->fetch('invite-list');
    }
    public function mytask(){
        $status = input('status');
        switch ($status){
            case '0':
                $task = TaskOrderModel::where(array('jid'=>$this->uid(),'status'=>$status))
                    ->select();
                $title = '已完成';
                break;
            case '2':
                $task = TaskOrderModel::where(array('jid'=>$this->uid(),'status'=>$status))
                    ->select();
                $title = '审核中';
                break;
            case '3':
                $task = TaskOrderModel::where(array('jid'=>$this->uid(),'status'=>$status))
                    ->select();
                $title = '不合格';
                break;
            default:
                $task = TaskOrderModel::where(array('jid'=>$this->uid(),'status'=>$status))
                    ->select();
                $title = '已报名';
                break;
        }
        $this->assign('task',$task);
        $this->assign('empty','<div class="no-msg p-center p-img"><img src="/static/home/img/no-msg.png"><p class="p97">您还没有任何任务</p></div>');
        $this->assign('title',$title);
        return $this->fetch();
    }
    public function cashlist(){

        $this->assign('title','提现');
        return $this->fetch('cash-list');
    }
    public function cash(){
        $type = input('type');
        if(request()->post()){
            $data = input('post.');
            $user = UserModel::get($this->uid());
            if($data['money'] < sysconf('site_cash_money') && $data['type'] == 1){
                return $this->getReturn(1,'提现金额必须大于' . sysconf('site_cash_money'));
            }
            if($data['money'] > $user['money'] && $data['type'] == 1){
                return $this->getReturn(1,'账户余额不足！');
            }
            if($data['money'] > $user['bial'] && $data['type'] == 2){
                return $this->getReturn(1,'保证金余额不足！');
            }
            if($user['alipay'] == ''){
                return $this->getReturn(2,'请先设置提现账号！');
            }
            if($data['type'] == 1){
                $type = 'money';
                $money = $user['money'] - $data['money'];
            }else{
                $type = 'bial';
                $money = $user['bial'] - $data['money'];
            }
            $res = UserModel::where('id',$this->uid())->update([$type=>$money]);
            CashModel::insert(['tel'=>$user['tel'],'uid'=>$this->uid(),'alipay'=>$user['alipay'],'real_name'=>$user['real_name'],'money'=>$data['money'],'type'=>$data['type'],'ctime'=>time(),'status'=>1]);
            //RecordModel::insert(['uid'=>$this->uid(),'money'=>$data['money'],'moneys'=>$money,'ctime'=>time(),'type'=>1]);
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'提现失败！请稍后再试！');
            }
        }
        $this->assign('type',$type);
        $this->assign('title','提现');
        return $this->fetch();
    }
    public function record(){
        $record = RecordModel::where('uid',$this->uid())->order('ctime desc')->select();
        $this->assign('record',$record);
        $this->assign('title','收支账单');
        return $this->fetch();
    }
    public function set(){
        if(request()->post()){
            $data = request()->except('file');
            $res = UserModel::where('id',$this->uid())->update($data);
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'修改失败！');
            }
        }
        $this->assign('title','设置');
        return $this->fetch();
    }
    public function publish(){
        $status = input('status');
        $task = TaskModel::where(array('uid'=>$this->uid(),'status'=>$status))->select();
        foreach ($task as $k=>$v){
            $task[$k]['icon'] = $v['icon'] == null ? null : explode(',',$v['icon']);
            $task[$k]['tname'] = Db::name('task_type')->where('id',$v['type'])->field('name')->value('name');
        }
        $this->assign('status',$status);
        $this->assign('task',$task);
        $this->assign('empty','<div class="no-msg p-center p-img"><img src="/static/home/img/no-msg.png"><p class="p97">您还没有任何任务</p></div>');
        $this->assign('title','发布管理');
        return $this->fetch();
    }
    public function message(){
        $uid = "0," . $this->uid();
        $message = MessageModel::where("uid in ($uid)")->order('ctime desc')->select();
        $this->assign('message',$message);
        $this->assign('empty','<div class="no-msg p-center p-img"><img src="/static/home/img/no-msg.png"><p class="p97">还没有通知</p></div>');
        $this->assign('title','消息通知');
        return $this->fetch();
    }
    public function msginfo($id){
        $data = MessageModel::get($id);
        $this->assign('data',$data);
        $this->assign('title',$data['title']);
        return $this->fetch();
    }
    public function about(){

        $this->assign('title','关于我们');
        return $this->fetch();
    }
    public function close(){
        if(request()->post()){
            UserModel::where('id',$this->uid())->update(['close'=>0]);
            return $this->getReturn(0,'成功',$this->uid());
        }
    }
    public function logout(){
        \think\Session::set('uid',null);
        $this->redirect('/login');
    }
    public function enQrcode($uid){
        $url = sysconf('site_url') . "/regs/" . $uid;
        $qr_code = new QrcodeServer(['generate'=>"display","size",200]);
        $content = $qr_code->createServer($url);
        return response($content,200,['Content-Length'=>strlen($content)])->contentType('image/png');
    }
}
