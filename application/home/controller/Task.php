<?php
namespace app\home\controller;

use app\admin\model\CloseOrderModel;
use app\admin\model\StepModel;
use app\admin\model\TaskModel;
use app\admin\model\TaskOrderModel;
use app\admin\model\TypeModel;
use app\admin\model\UserModel;
use app\chat\model\ChatModel;
use app\chat\model\MessageModel;
use think\Cookie;
use think\Db;

class Task extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->login();
    }
    public function pushtask(){
        $this->closeOrder();
        if(request()->post()){
            $data = request()->except('file');
            $user = \app\admin\model\UserModel::field('id,avatar,money,bial,d_bial')->find($this->uid());
            if($user['bial'] < $data['money']){
                return $this->getReturn(1,'保证金余额不足！请联系管理员充值！');
            }
            $step = \app\admin\model\StepModel::where(array('tid'=>null,'uid'=>$this->uid()))->find();
            if(!$step){
                return $this->getReturn(1,'请添加任务步骤！');
            }
            $money = $user['bial'] - $data['money'];
            $data['add_time'] = time();
            $data['uid'] = $this->uid();
          	$data['logo'] = $user['avatar'];
            \think\Db::startTrans();
            try {
                \app\admin\model\UserModel::where('id',$this->uid())->update(['bial'=>$user['bial'] - $data['money'],'d_bial'=>$user['d_bial'] + $data['money']]);
                $tid = \app\admin\model\TaskModel::insertGetId($data);
                \app\admin\model\RecordModel::insert(['uid'=>$this->uid(),'tid'=>$tid,'money'=>$data['money'],'moneys'=>$money,'mode'=>'-','type'=>2,'ctime'=>time(),'remark'=>'发布任务，冻结保证金' . $data['money'] . '元，冻结后剩余保证金余额：' . $money]);
                $res = \app\admin\model\StepModel::where(array('tid'=>null,'uid'=>$this->uid()))->update(['tid'=>$tid]);
                // 提交事务
                \think\Db::commit();
            } catch (\Exception $e) {
                \think\Db::rollback();
            }
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'发布失败！');
            }
        }
        $type = \app\admin\model\TypeModel::where('status',0)->select();
        $this->assign('type',$type);
        $data = \app\admin\model\StepModel::where(array('tid'=>null,'uid'=>$this->uid()))->select();
        $this->assign('data',$data);
        $this->assign('title','发布任务');
        return $this->fetch('task-push');
    }
    public function accept(){
        $this->closeOrder();
        if (request()->post()){
            switch (input('type')){
                case 'check':
                    $data = request()->except('file');
                    $oid = input('oid');
                    $order = \app\admin\model\TaskOrderModel::get($oid);
                    if($order['jid'] != $this->uid()){
                        return $this->getReturn(1,'权限不足！' . $this->uid() . $order['jid']);
                    }
                    if($order['status'] != 1){
                        return $this->getReturn(1,'任务状态异常！请刷新页面');
                    }
                    $mark = false;
                    $step = \app\admin\model\StepModel::where(array('tid'=>$order['tid']))->select();
                    foreach($step as $row){
                        if($row['type'] == 'mark'){
                            if(empty($data['yz']) || $data['yz'] == ''){
                                return $this->getReturn(1,'请按要求传入验证图');
                            }
                            $mark = true;
                        }
                        if($row['type'] == 'data'){
                            if(empty($data['yztxt'])){
                                return $this->getReturn(1,'请按要求提交验证信息！');
                            }
                            \think\Db::name('task_data')->insert(['oid'=>$data['oid'],'type'=>'data','content'=>$data['yztxt'],'uid'=>$this->uid(),'ctime'=>time()]);
                        }
                    }
                    if($mark){
                        for ($i=0;$i<count($data['yz']);$i++){
                            if($data['yz'][$i] == ''){
                                return $this->getReturn(1,'请按要求传入验证图');
                            }
                        }
                        $pic = implode(',',$data['yz']);
                        \think\Db::name('task_data')->insert(['oid'=>$data['oid'],'type'=>'yz','content'=>$pic,'uid'=>$this->uid(),'ctime'=>time()]);
                    }
                    $res = \app\admin\model\TaskOrderModel::where('id',$oid)->update(['status'=>2,'jtime'=>time()]);
                    break;
                default:
                    $tid = input('id');
                    $task = \app\admin\model\TaskModel::field('id,name,logo,title,uid,number,passnum,jnum,status,price')->find($tid);
                    if($task['status'] != 0){
                        return $this->getReturn(1,'任务已下架或状态异常！');
                    }
                    if($task['number'] == $task['jnum']){
                        \app\admin\model\TaskModel::where('id',$tid)->update(['status'=>2]);
                        return $this->getReturn(1,'接单人数已满！');
                    }
                    $invite = get_user_info($this->uid(),'invite');
                    if($invite == null || $invite == 0){
                        $invite = null;
                        $mout_money = 0.00;
                        $money = $task['price'];
                    }else{
                        $mout_money = $task['price'] * sysconf('task_invite_mout') / 100 ;
                        $money = $task['price'] - $mout_money;
                    }
                    $roomid = base64_encode($this->uid() . get_user_info($this->uid(),'tel') . $tid);
                    $res = null;
                    $uid = $this->uid();
                    \think\Db::startTrans();
                    try {
                        $chat = \app\chat\model\MessageModel::where(array('tid'=>$tid,'fid'=>$task['uid'],'uid'=>$uid,'roomid'=>$roomid))->find();
                        if(!$chat){
                            \app\chat\model\MessageModel::insert(['tid'=>$tid,'fid'=>$task['uid'],'uid'=>$uid,'roomid'=>$roomid,'ctime'=>time()]);
                        }
                        \app\chat\model\ChatModel::insert(['tid'=>$tid,'fid'=>$task['uid'],'toid'=>$uid,'content'=>'Hi，感谢您报名此职位！','time'=>time(),'isonline'=>0,'type'=>'save','foid'=>$task['uid'],'roomid'=>$roomid,'state'=>0]);
                        \app\admin\model\TaskModel::where('id',$tid)->setInc('jnum');

                        $res = \app\admin\model\TaskOrderModel::insert(['tid'=>$tid,'logo'=>$task['logo'],'title'=>$task['title'],'tname'=>$task['name'],'uid'=>$task['uid'],'jid'=>$uid,'invite'=>$invite,'invite_money'=>$mout_money,'ctime'=>time(),'money'=>$money,'status'=>1]);
                        // 提交事务
                        \think\Db::commit();
                    } catch (\Exception $e) {
                        \think\Db::rollback();
                    }
                    break;
            }
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'操作失败！请稍后再试！');
            }
        }
    }
    public function updateStatus(){
        if(request()->post()){
            $data = input('post.');
            $task = \app\admin\model\TaskModel::get($data['id']);
            if($task['uid'] != $this->uid()){
                return $this->getReturn(1,'权限不足！');
            }
          	if(!empty($data['bao'])){
              	$order = \app\admin\model\TaskOrderModel::where('tid',$data['id'])->where("status in (1,2)")->find();
              	if($order){
                 	return $this->getReturn(1,'检测到有未审核订单，请在审核完成后退保！'); 
                }
            	$res = \app\admin\model\TaskModel::where('id',$data['id'])->update(['bao'=>$data['bao'],'bao_time'=>time()]);
            }else{
              	$res = \app\admin\model\TaskModel::where('id',$data['id'])->update(['status'=>$data['status']]);
            }
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'更新失败！请稍后再试！');
            }
        }
    }
    public function edittask($id){
        if(request()->post()){
            $data = request()->except('file');
            $data['add_time'] = time();
            $res = \app\admin\model\TaskModel::where('id',$id)->update($data);
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'修改失败！');
            }
        }
        $task = \app\admin\model\TaskModel::get($id);
        $this->assign('task',$task);
        $type = \app\admin\model\TypeModel::where('status',0)->select();
        $this->assign('type',$type);
        $data = \app\admin\model\StepModel::where(array('tid'=>$id,'uid'=>$this->uid()))->select();
        $this->assign('data',$data);
        $this->assign('title','任务编辑');
        return $this->fetch('task-edit');
    }
    public function dostep(){
        if(\request()->post()){
            $data = request()->except('file');
            $data['uid'] = $this->uid();
            $data['ctime'] = time();
            $res = \app\admin\model\StepModel::insertGetId($data);
            if($res){
                return $this->getReturn(0,'创建成功！',$res);
            }else{
                return $this->getReturn(['code'=>1,'msg'=>'创建失败！请重试']);
            }
        }
    }
    public function editstep(){
        if(request()->post()){
            $data = input('post.');
            $step = \app\admin\model\StepModel::get($data['id']);
            if(!$step){
                return $this->getReturn(1,'数据错误，请刷新后重试！');
            }
            if($step['uid'] != $this->uid()){
                return $this->getReturn(1,'权限不足！');
            }
            if(!empty($data['txt'])){
                $res = \app\admin\model\StepModel::where('id',$data['id'])->update(['mark'=>$data['mark'],'txt'=>$data['txt']]);
            }else{
                $res = \app\admin\model\StepModel::where('id',$data['id'])->update(['mark'=>$data['mark']]);
            }
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'修改失败！请稍后再试！');
            }
        }
    }
    public function delstep(){
        if(\request()->post()){
            $id = input('id');
            $step = \app\admin\model\StepModel::get($id);
            if(!$step){
                return $this->getReturn(1,'该步骤不存在！请刷新页面');
            }
            if($step['uid'] != $this->uid()){
                return $this->getReturn(1,'非法请求或权限不足！');
            }
            $res = \think\Db::name('task_step')->delete($id);
            if($res){
                return $this->getReturn();
            }else{
                return $this->getReturn(1,'删除失败');
            }
        }
    }
    public function preview(){
        if(request()->post()){
            $data = input('post.');
            Cookie::set('preview',$data,3600);
            return $this->getReturn();
        }
        if(!empty(input('id'))){
            $step = \app\admin\model\StepModel::where(array('tid'=>input('id'),'uid'=>$this->uid()))->select();
        }else{
            $step = \app\admin\model\StepModel::where(array('tid'=>null,'uid'=>$this->uid()))->select();
        }
        $this->assign('step',$step);
        $this->assign('task',Cookie::get('preview'));
        $this->assign('title','任务预览');
        return $this->fetch();
    }
}
